{"version":3,"sources":["Component/SearchPage.js","icons/humidity.svg","icons/wind.svg","icons/pressure.svg","icons/temp.svg","Component/Zones.js","Component/InfoPage.js","Component/About.js","Component/Error.js","App.js","reportWebVitals.js","index.js"],"names":["SearchPage","props","updateCity","getWeather","className","type","placeholder","onChange","e","target","value","onClick","to","Zones","src","image","alt","descp","InfoPage","timeStamp","lat","lng","weather","isDay","icon","includes","toDegreesMinutesAndSeconds","coordinate","absolute","Math","abs","degrees","floor","minutesNotTruncated","minutes","name","sys","country","main","temp","toFixed","description","temp_max","temp_min","coord","lon","temperature","Date","getHours","getMinutes","humidity","wind","speed","pressure","About","Error","App","history","useHistory","useState","city","updateWeather","a","preventDefault","response","axios","get","data","push","activeClassName","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d056cda6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SearchPage = (props) => {\r\n    const{updateCity,getWeather}=props;\r\n    return (\r\n        <div className=\"page\">\r\n        <div className=\"searchpage\">\r\n            <h1 className=\"searchhead\">Find the weather of your City Here</h1>\r\n            <div className=\"seachbar\" >\r\n               <input className=\"cityname\" type=\"text\" placeholder=\"Enter Your City Name\" onChange={(e)=>{updateCity(e.target.value) }}/>\r\n               <button className=\"submit\" onClick={getWeather}>Submit</button>\r\n               <NavLink to=\"/info\" className=\"submitlink\">View Information</NavLink>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","export default __webpack_public_path__ + \"static/media/humidity.38d0c2ff.svg\";","export default __webpack_public_path__ + \"static/media/wind.d35fef2c.svg\";","export default __webpack_public_path__ + \"static/media/pressure.37f0a961.svg\";","export default __webpack_public_path__ + \"static/media/temp.aa236718.svg\";","import React from 'react'\r\n\r\nconst Zones = (props) => {\r\n    return (\r\n        <>\r\n          <div className=\"zones\">\r\n              <div className=\"image\"><img className=\"belowimages\" src={props.image} alt=\"\" /></div>\r\n              <div className=\"datas\">\r\n                  <div className=\"values\">{props.value}</div>\r\n                  <div className=\"descp\">{props.descp}</div>\r\n              </div>    \r\n          </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Zones\r\n","import React from 'react'\r\nimport humidity from '../icons/humidity.svg'\r\nimport wind from '../icons/wind.svg'\r\nimport pressure from '../icons/pressure.svg'\r\nimport temperature from '../icons/temp.svg'\r\nimport Zones from './Zones'\r\n\r\nconst InfoPage = (props) => {\r\n    const{weather}=props    \r\n    const isDay=weather?.weather[0].icon?.includes(\"d\");\r\n    const getTime=(timeStamp)=>{\r\n        return `${new Date(timeStamp*1000).getHours()} : ${new Date(timeStamp*1000).getMinutes()}`;\r\n    }\r\n    function toDegreesMinutesAndSeconds(coordinate) {\r\n        var absolute = Math.abs(coordinate);\r\n        var degrees = Math.floor(absolute);\r\n        var minutesNotTruncated = (absolute - degrees) * 60;\r\n        var minutes = Math.floor(minutesNotTruncated);\r\n        var seconds = Math.floor((minutesNotTruncated - minutes) * 60);\r\n    \r\n        return degrees + \"째\" + minutes + \"'\" + seconds+`\"`;\r\n    }\r\n    \r\n    function convertLati(lat) {\r\n        var latitude = toDegreesMinutesAndSeconds(lat);\r\n        var latitudeCardinal = lat >= 0 ? \"N\" : \"S\";    \r\n        return latitude  + latitudeCardinal;\r\n    }\r\n    function convertLong(lng) {\r\n        var longitude = toDegreesMinutesAndSeconds(lng);\r\n        var longitudeCardinal = lng >= 0 ? \"E\" : \"W\";  \r\n        return longitude + longitudeCardinal;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"infopage\">\r\n                <div className=\"cityheading\">\r\n                    <h1 className=\"cityhead\">{weather?.name}</h1>\r\n                    <h1 className=\"cityhead\">, {weather?.sys?.country}</h1>\r\n                </div>\r\n                <div className=\"middlepart\">\r\n                    <div className=\"temp\">\r\n                        <h1 className=\"tempvalue\">{`${(weather?.main?.temp-273).toFixed(1)}째C`}</h1>\r\n                        <h5 className=\"tempdescrp\">{weather?.weather[0].description}</h5>\r\n                      <div className=\"minmaxtemp\">\r\n                        <div className=\"max\">Maximum : <span>{`${(weather?.main?.temp_max-273).toFixed(1)}째C`}</span></div>\r\n                        <div className=\"min\">Minimum : <span>{`${(weather?.main?.temp_min-273).toFixed(1)}째C`}</span></div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"weatherimage\">\r\n                        \r\n                        <img className=\"middleimage\" src={`http://openweathermap.org/img/wn/${weather?.weather[0].icon}@2x.png`} alt=\"\" />\r\n                        {/* <img className=\"middleimage\" src={zero} alt=\"\" /> */}\r\n                    </div>\r\n                    <div className=\"coordinate\">\r\n                        <div className=\"leftcoor\">\r\n                           <div className=\"longitude\">Longitude</div>\r\n                           <div className=\"latitude\"> Latitude</div>\r\n                        </div>\r\n                        <div className=\"rightcoor\">\r\n                           <div className=\"longitude\"><span>{`: ${convertLong(weather?.coord?.lon)}`}</span></div>\r\n                           <div className=\"latitude\"><span>{`: ${convertLati(weather?.coord?.lat)}`}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"belowpart\">\r\n                    <div className=\"left\">\r\n\r\n                    <Zones image={temperature} descp={isDay?\"Sunset\":\"Sunrise\"} value={getTime(weather?.sys[isDay ? \"sunset\":\"sunrise\"])}/>\r\n                    <Zones image={humidity} descp=\"humidity\" value={weather?.main?.humidity}/>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                    <Zones image={wind} descp=\"wind\" value={weather?.wind?.speed}/>\r\n                    <Zones image={pressure} descp=\"pressure\" value={weather?.main?.pressure}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPage\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h2 className=\"about\">In this App you Can find your city weather information.</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"errorpage\">\r\n            <h2>Information for this place is not available. Please check your Internet connection or Type Correct spelling.</h2>\r\n            <div className=\"back\">\r\n\r\n            <Link className=\"backtohome\" to=\"/\">Back to Home</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import './App.css';\nimport './styles/searchpage.css';\nimport './styles/infopage.css';\nimport './styles/zones.css';\nimport { NavLink } from \"react-router-dom\";\nimport { Route, Switch,useHistory } from \"react-router\";\nimport React,{useState} from 'react'\nimport SearchPage from './Component/SearchPage';\nimport InfoPage from './Component/InfoPage';\nimport About from './Component/About';\nimport Error from './Component/Error';\nimport axios from 'axios';\nconst key=\"20b5bf555710aaddce743a7b8845a021\";\n\nfunction App() {\n  let history = useHistory();\n  const[city,updateCity]=useState();\n  const[weather,updateWeather]=useState();\n\nconst getWeather=async (e)=>{\n  e.preventDefault();\n  let response=null;\n  try {\n     response =await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}`)\n    updateWeather(response.data);\n  }\n  catch(err) {\n    response=null;\n  }\n  \n  if(response!==null){\n    history.push(\"/info\");\n  }else{\n    history.push(\"/error\");\n  }\n}\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <h2 className=\"heading\">Weather App</h2>\n        <div className=\"nav\">\n           <NavLink className=\"navbar-item navitem1\" activeClassName=\"is-active\" to=\"/\" exact>Home</NavLink>\n           <NavLink className=\"navbar-item navitem2\" activeClassName=\"is-active\" to=\"/about\" >About</NavLink>\n        </div>\n      </div>\n      <div className=\"info\">\n      <Switch>\n          <Route path=\"/about\" ><About/></Route>\n          <Route path=\"/info\"><InfoPage weather={weather}/></Route>\n          <Route path=\"/error\"><Error/></Route>\n          <Route path=\"/\"><SearchPage updateCity={updateCity} getWeather={getWeather}/></Route>\n      </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}